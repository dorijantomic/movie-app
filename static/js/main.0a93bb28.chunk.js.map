{"version":3,"sources":["components/MovieListItem/MovieListItem.js","components/MovieList/MovieList.js","components/ButtonGroup/ButtonGroup.js","components/MovieModal/MovieModal.js","components/Layout/Layout.js","containers/MovieContainer/MovieContainer.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","theme","card","maxHeight","maxWidth","textAlign","margin","spacing","breakpoints","down","cardMedia","height","width","cardRoot","overflow","cardHeader","position","left","zIndex","bottom","name","releaseDate","rating","language","image","classes","Card","className","root","CardActionArea","CardHeader","avatar","Avatar","aria-label","style","backgroundColor","CardMedia","CardContent","Typography","component","Box","fontWeight","substring","variant","container","data","Grid","justify","map","movie","i","key","original_title","item","xs","md","lg","release_date","vote_average","original_language","backdrop_path","buttonContainer","display","flexFlow","justifyContent","loadButton","borderRadius","circuralProgress","shuffleButton","palette","primary","main","loadMoreMovies","loading","toggleModal","Button","color","onClick","CircularProgress","size","IconButton","fontSize","modal","alignItems","paper","heigh","formContainer","marginTop","rollButton","open","genre","handleGenreChange","searchByGenre","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Paper","elevation","Divider","FormControl","formControl","FormLabel","RadioGroup","value","onChange","FormControlLabel","control","Radio","label","Layout","MovieContainer","state","moviesData","page","modalOpen","randomMovies","allGenre","action","adventure","animation","comedy","crime","documentary","thriller","fetchMoreMovies","oldMoviesData","fetch","then","res","json","setState","concat","results","fetchByGenre","prevState","bool","e","target","undefined","Math","floor","random","this","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0a93bb28.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  CardMedia,\r\n  CardContent,\r\n  CardActions,\r\n  CardActionArea,\r\n  Avatar,\r\n  Typography,\r\n  Skeleton,\r\n  withStyles\r\n} from \"@material-ui/core\";\r\n\r\nconst styles = theme => ({\r\n  card: {\r\n    maxHeight: 480,\r\n    maxWidth: 520,\r\n    textAlign: \"left\",\r\n    margin: theme.spacing(10) + \"px auto\", // theme spacing will add 80 to bottom margin\r\n\r\n    [theme.breakpoints.down(\"lg\")]: {\r\n      maxWidth: 420\r\n    },\r\n\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      maxWidth: 420\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      maxWidth: 420\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      maxWidth: 300\r\n    }\r\n  },\r\n  cardMedia: {\r\n    height: 220,\r\n    width: \"93%\",\r\n    margin: \"0 auto\",\r\n  },\r\n  cardRoot: {\r\n    overflow: \"visible\"\r\n  },\r\n\r\n  cardHeader: {\r\n    position: \"relative\",\r\n    left: \"91%\",\r\n    zIndex: 1,\r\n    bottom: 36,\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      left: '86%'\r\n    }\r\n  }\r\n});\r\n\r\nconst MovieListItem = ({\r\n  name,\r\n  releaseDate,\r\n  rating,\r\n  language,\r\n  image,\r\n  classes\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      <Card className={classes.card} classes={{ root: classes.cardRoot }}>\r\n        <CardActionArea>\r\n          <CardHeader\r\n            avatar={<Avatar aria-label=\"rating\" style={{backgroundColor: \"#3f51b5\"}}>{rating}</Avatar>}\r\n            className={classes.cardHeader}\r\n          />\r\n          <CardMedia\r\n            image={`https://image.tmdb.org/t/p/w500/${image}`}\r\n            className={classes.cardMedia}\r\n          />\r\n          <CardContent>\r\n            <Typography component={\"span\"}>\r\n              <Box fontWeight=\"fontWeightBold\">\r\n                {name} ( {releaseDate.substring(0, 4)} )\r\n              </Box>\r\n            </Typography>\r\n\r\n            <Typography variant=\"subtitle1\"> Language: {language}</Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(MovieListItem);\r\n","import React from \"react\";\r\nimport MovieListItem from \"../MovieListItem/MovieListItem\";\r\nimport Grid from \"@material-ui/core/Grid/\";\r\nimport { withStyles }  from \"@material-ui/core/\"\r\nconst styles = theme => ({\r\n  container: {\r\n    overflow: \"hidden\"\r\n  }\r\n})\r\nconst MovieList = ({ data , classes}) => {\r\n  return (\r\n    <div>\r\n      <Grid container justify=\"space-around\" className={classes.container}>\r\n        {data ? (\r\n          data.map((movie, i) => (\r\n            <Grid key={movie.original_title + i} item xs={12} md={6} lg={4}>\r\n              <MovieListItem\r\n                name={movie.original_title}\r\n                releaseDate={movie.release_date}\r\n                rating={movie.vote_average}\r\n                language={movie.original_language}\r\n                image={movie.backdrop_path}\r\n              />\r\n            </Grid>\r\n          ))\r\n        ) : (\r\n          <h1>Loading...</h1>\r\n        )}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(MovieList);\r\n","import React from \"react\";\r\nimport {\r\n  CircularProgress,\r\n  Button,\r\n  IconButton,\r\n  Typography,\r\n  withStyles\r\n} from \"@material-ui/core\";\r\n\r\nimport Shuffle from \"@material-ui/icons/ShuffleRounded\";\r\n\r\nconst styles = theme => ({\r\n  buttonContainer: {\r\n    display: \"flex\",\r\n    flexFlow: \"row wrap\",\r\n    justifyContent: \"space-around\",\r\n    position: \"relative\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      justifyContent: \"space-between\"\r\n    },\r\n  },\r\n  loadButton: {\r\n    borderRadius: \"50%\",\r\n    height: \"70px\",\r\n    position: \"absolute\",\r\n    left: \"50%\"\r\n  },\r\n  circuralProgress: {\r\n    position: \"absolute\",\r\n    zIndex: 1,\r\n    width: 70,\r\n    height: 70,\r\n    left: \"50%\"\r\n  },\r\n\r\n  shuffleButton: {\r\n    borderRadius: \"50%\",\r\n    height: \"70px\",\r\n    width: \"70px\",\r\n    backgroundColor: theme.palette.primary.main\r\n  }\r\n});\r\n\r\n// The empty span below is used to easily position the rest of the buttons properly\r\nconst ButtonGroup = ({ classes, loadMoreMovies, loading, toggleModal }) => {\r\n  return (\r\n    <div className={classes.buttonContainer}>\r\n      <span></span>\r\n      <div>\r\n        <Button\r\n          color=\"primary\"\r\n          onClick={() => loadMoreMovies()}\r\n          variant=\"contained\"\r\n          className={classes.loadButton}\r\n        >\r\n          Load\r\n        </Button>\r\n        {loading && <CircularProgress color=\"secondary\" size={70} className={classes.circuralProgress} />}\r\n      </div>\r\n\r\n      <IconButton onClick={() => toggleModal(true)} color=\"secondary\" className={classes.shuffleButton} >\r\n        <Shuffle fontSize=\"large\" />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(ButtonGroup);\r\n","import React from \"react\";\r\nimport {\r\n  withStyles,\r\n  Button,\r\n  Modal,\r\n  Typography,\r\n  Card,\r\n  Fade,\r\n  Backdrop,\r\n  Paper,\r\n  Divider,\r\n  FormControl,\r\n  FormLabel,\r\n  FormControlLabel,\r\n  Radio,\r\n  RadioGroup\r\n} from \"@material-ui/core\";\r\n\r\nconst styles = theme => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  },\r\n\r\n  paper: {\r\n    width: \"30%\",\r\n    height: \"80%\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: 300,\r\n      heigh: 600\r\n    }\r\n  },\r\n  container: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexFlow: \"column nowrap\"\r\n  },\r\n  formContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginTop: \"auto\"\r\n  },\r\n\r\n  rollButton: {\r\n    marginTop: \"auto\"\r\n  }\r\n});\r\n\r\nconst MovieModal = ({\r\n  open,\r\n  toggleModal,\r\n  classes,\r\n  genre,\r\n  handleGenreChange,\r\n  searchByGenre\r\n}) => {\r\n  return (\r\n    <div>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={() => toggleModal(false)}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <Paper className={classes.paper} elevation={3}>\r\n            <div className={classes.container}>\r\n              <div>\r\n                <Typography variant=\"h4\">Movie Roulette</Typography>\r\n              </div>\r\n              <Divider />\r\n              <div className={classes.formContainer}>\r\n                <FormControl\r\n                  component=\"fieldset\"\r\n                  className={classes.formControl}\r\n                >\r\n                  <FormLabel component=\"legend\">Select Genre</FormLabel>\r\n                  <RadioGroup\r\n                    aria-label=\"genre\"\r\n                    name=\"genre\"\r\n                    value={genre}\r\n                    onChange={handleGenreChange}\r\n                  >\r\n                    <FormControlLabel\r\n                      value=\"action\"\r\n                      control={<Radio />}\r\n                      label=\"Action\"\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"adventure\"\r\n                      control={<Radio />}\r\n                      label=\"Adventure\"\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"animation\"\r\n                      control={<Radio />}\r\n                      label=\"Animation\"\r\n                    />\r\n                      <FormControlLabel\r\n                      value=\"sci-fi\"\r\n                      control={<Radio />}\r\n                      label=\"Sci-fi\"\r\n                    />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n              </div>\r\n              <Button className={classes.rollButton} variant=\"contained\" onClick={searchByGenre} color=\"primary\">Roll</Button>\r\n            </div>\r\n          </Paper>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(MovieModal);\r\n","import React from 'react'\r\nimport MovieList from '../MovieList/MovieList'\r\nimport ButtonGroup from '../../components/ButtonGroup/ButtonGroup'\r\nimport MovieModal from '../../components/MovieModal/MovieModal'\r\nconst Layout = ({ data, loading,loadMoreMovies, toggleModal, open, genre, handleGenreChange, searchByGenre}) => {\r\n    return (\r\n        <div>\r\n            <MovieList data={data} />\r\n            <ButtonGroup loadMoreMovies={loadMoreMovies} loading={loading} toggleModal={toggleModal} />\r\n            <MovieModal open={open} toggleModal={toggleModal} genre={genre} handleGenreChange={handleGenreChange} searchByGenre={searchByGenre}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Layout\r\n","import React, { Component } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nexport default class MovieContainer extends Component {\r\n  state = {\r\n    moviesData: null,\r\n    loading: true,\r\n    page: 1,\r\n    modalOpen: false,\r\n    randomMovies: false,\r\n    genre: \"action\",\r\n    allGenre: {\r\n      action: 28,\r\n      adventure: 12,\r\n      animation: 16,\r\n      comedy: 35,\r\n      crime: 80,\r\n      documentary: 99,\r\n      \"sci-fi\": 878,\r\n      thriller: 53\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\r\n      `https://api.themoviedb.org/3/movie/popular?api_key=f3edabafe1f7ed3f14c3e13e2f3a8ee3&language=en-US&page=${this.state.page}`\r\n    )\r\n      .then(res => res.json())\r\n      .then(res =>\r\n        this.setState({\r\n          moviesData: res.results,\r\n          loading: false\r\n        })\r\n      );\r\n  }\r\n  fetchMoreMovies = oldMoviesData => {\r\n    if (this.state.randomMovies) {\r\n      this.fetchByGenre(oldMoviesData);\r\n    } else {\r\n      return () => {\r\n        fetch(\r\n          `https://api.themoviedb.org/3/movie/popular?api_key=f3edabafe1f7ed3f14c3e13e2f3a8ee3&language=en-US&page=${this.state.page}`\r\n        )\r\n          .then(res => res.json())\r\n          .then(res =>\r\n            this.setState({\r\n              moviesData: oldMoviesData.concat(res.results),\r\n              loading: false\r\n            })\r\n          );\r\n      };\r\n    }\r\n  };\r\n\r\n  loadMoreMovies = () => {\r\n    const oldMoviesData = [...this.state.moviesData];\r\n    this.setState(prevState => {\r\n      return {\r\n        page: prevState.page + 1,\r\n        loading: true\r\n      };\r\n    }, this.fetchMoreMovies(oldMoviesData));\r\n  };\r\n\r\n  toggleModal = bool => {\r\n    this.setState({\r\n      modalOpen: bool\r\n    });\r\n  };\r\n\r\n  handleGenreChange = e => {\r\n    this.setState({\r\n      genre: e.target.value\r\n    });\r\n  };\r\n\r\n  fetchByGenre = oldMoviesData => {\r\n    const genre = [...this.state.genre];\r\n    if (oldMoviesData !== undefined) {\r\n      fetch(\r\n        `https://api.themoviedb.org/3/discover/movie?api_key=f3edabafe1f7ed3f14c3e13e2f3a8ee3&language=en-US&include_adult=false&include_video=false&page=${\r\n          this.state.page\r\n        }&with_genres=${this.state.allGenre[this.state.genre]}`\r\n      )\r\n        .then(res => res.json())\r\n        .then(res =>\r\n          this.setState({\r\n            moviesData: oldMoviesData.concat(res.results),\r\n            loading: false,\r\n          })\r\n        );\r\n    } else {\r\n      return () => {\r\n        fetch(\r\n          `https://api.themoviedb.org/3/discover/movie?api_key=f3edabafe1f7ed3f14c3e13e2f3a8ee3&language=en-US&include_adult=false&include_video=false&page=${\r\n            this.state.page\r\n          }&with_genres=${this.state.allGenre[this.state.genre]}`\r\n        )\r\n          .then(res => res.json())\r\n          .then(res =>\r\n            this.setState({\r\n              moviesData: res.results,\r\n              loading: false,\r\n              modalOpen: false\r\n            })\r\n          );\r\n      };\r\n    }\r\n  };\r\n\r\n  searchByGenre = () => {\r\n    this.setState(\r\n      {\r\n        page: Math.floor(Math.random() * (500 - 1) + 1),\r\n        loading: true,\r\n        randomMovies: true\r\n      },\r\n      this.fetchByGenre()\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Layout\r\n          handleGenreChange={this.handleGenreChange}\r\n          genre={this.state.genre}\r\n          data={this.state.moviesData}\r\n          loading={this.state.loading}\r\n          loadMoreMovies={this.loadMoreMovies}\r\n          toggleModal={this.toggleModal}\r\n          open={this.state.modalOpen}\r\n          searchByGenre={this.searchByGenre}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\n\r\nimport MovieContainer from './containers/MovieContainer/MovieContainer'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <MovieContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}