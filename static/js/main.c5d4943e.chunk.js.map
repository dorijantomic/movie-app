{"version":3,"sources":["components/MovieListItem/MovieListItem.js","components/MovieList/MovieList.js","components/ButtonGroup/ButtonGroup.js","components/MovieModal/MovieModal.js","components/Layout/Layout.js","containers/MovieContainer/MovieContainer.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","theme","card","maxHeight","maxWidth","textAlign","margin","spacing","breakpoints","down","cardMedia","height","width","cardRoot","overflow","cardHeader","position","left","zIndex","bottom","name","releaseDate","rating","language","image","classes","Card","className","root","CardActionArea","CardHeader","avatar","Avatar","aria-label","CardMedia","CardContent","Typography","component","Box","fontWeight","substring","variant","container","data","Grid","justify","map","movie","i","key","original_title","item","xs","md","lg","release_date","vote_average","original_language","backdrop_path","buttonContainer","display","flexFlow","justifyContent","loadButton","borderRadius","circuralProgress","loadMoreMovies","loading","toggleModal","Button","onClick","CircularProgress","size","IconButton","fontSize","modal","alignItems","paper","heigh","formContainer","marginTop","rollButton","open","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Paper","elevation","Divider","FormControl","formControl","FormLabel","RadioGroup","FormControlLabel","value","control","Radio","label","disabled","Layout","MovieContainer","state","moviesData","page","modalOpen","fetchMoreMovies","oldMoviesData","fetch","then","res","json","setState","concat","results","prevState","bool","this","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c5d4943e.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  CardMedia,\r\n  CardContent,\r\n  CardActions,\r\n  CardActionArea,\r\n  Avatar,\r\n  Typography,\r\n  Skeleton,\r\n  withStyles\r\n} from \"@material-ui/core\";\r\n\r\nconst styles = theme => ({\r\n  card: {\r\n    maxHeight: 480,\r\n    maxWidth: 520,\r\n    textAlign: \"left\",\r\n    margin: theme.spacing(10) + \"px auto\", // theme spacing will add 80 to bottom margin\r\n\r\n    [theme.breakpoints.down(\"lg\")]: {\r\n      maxWidth: 420\r\n    },\r\n\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      maxWidth: 420\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      maxWidth: 420\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      maxWidth: 300\r\n    }\r\n  },\r\n  cardMedia: {\r\n    height: 220,\r\n    width: \"93%\",\r\n    margin: \"0 auto\",\r\n  },\r\n  cardRoot: {\r\n    overflow: \"visible\"\r\n  },\r\n\r\n  cardHeader: {\r\n    position: \"relative\",\r\n    left: \"91%\",\r\n    zIndex: 1,\r\n    bottom: 36,\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      left: '86%'\r\n    }\r\n  }\r\n});\r\n\r\nconst MovieListItem = ({\r\n  name,\r\n  releaseDate,\r\n  rating,\r\n  language,\r\n  image,\r\n  classes\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      <Card className={classes.card} classes={{ root: classes.cardRoot }}>\r\n        <CardActionArea>\r\n          <CardHeader\r\n            avatar={<Avatar aria-label=\"recipe\">{rating}</Avatar>}\r\n            className={classes.cardHeader}\r\n          />\r\n          <CardMedia\r\n            image={`https://image.tmdb.org/t/p/w500/${image}`}\r\n            className={classes.cardMedia}\r\n          />\r\n          <CardContent>\r\n            <Typography component={\"span\"}>\r\n              <Box fontWeight=\"fontWeightBold\">\r\n                {name} ( {releaseDate.substring(0, 4)} )\r\n              </Box>\r\n            </Typography>\r\n\r\n            <Typography variant=\"subtitle1\"> Language: {language}</Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(MovieListItem);\r\n","import React from \"react\";\r\nimport MovieListItem from \"../MovieListItem/MovieListItem\";\r\nimport Grid from \"@material-ui/core/Grid/\";\r\nimport { withStyles }  from \"@material-ui/core/\"\r\nconst styles = theme => ({\r\n  container: {\r\n    overflow: \"hidden\"\r\n  }\r\n})\r\nconst MovieList = ({ data , classes}) => {\r\n  return (\r\n    <div>\r\n      <Grid container justify=\"space-around\" className={classes.container}>\r\n        {data ? (\r\n          data.map((movie, i) => (\r\n            <Grid key={movie.original_title + i} item xs={12} md={6} lg={4}>\r\n              <MovieListItem\r\n                name={movie.original_title}\r\n                releaseDate={movie.release_date}\r\n                rating={movie.vote_average}\r\n                language={movie.original_language}\r\n                image={movie.backdrop_path}\r\n              />\r\n            </Grid>\r\n          ))\r\n        ) : (\r\n          <h1>Loading...</h1>\r\n        )}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(MovieList);\r\n","import React from \"react\";\r\nimport {\r\n  CircularProgress,\r\n  Button,\r\n  IconButton,\r\n  Typography,\r\n  withStyles\r\n} from \"@material-ui/core\";\r\n\r\nimport Shuffle from \"@material-ui/icons/Shuffle\";\r\n\r\nconst styles = theme => ({\r\n  buttonContainer: {\r\n    display: \"flex\",\r\n    flexFlow: \"row wrap\",\r\n    justifyContent: \"space-around\",\r\n    position: \"relative\"\r\n  },\r\n  loadButton: {\r\n    borderRadius: \"50%\",\r\n    height: \"70px\",\r\n    position: \"absolute\",\r\n    left: \"50%\"\r\n  },\r\n  circuralProgress: {\r\n    position: \"absolute\",\r\n    zIndex: 1,\r\n    width: 70,\r\n    height: 70,\r\n    left: \"50%\"\r\n  }\r\n});\r\n\r\n// The empty span below is used to easily position the rest of the buttons properly\r\nconst ButtonGroup = ({ classes, loadMoreMovies, loading, toggleModal }) => {\r\n  return (\r\n    <div className={classes.buttonContainer}>\r\n      <span></span>\r\n      <div>\r\n        <Button\r\n          onClick={() => loadMoreMovies()}\r\n          variant=\"contained\"\r\n          className={classes.loadButton}\r\n        >\r\n          Load\r\n        </Button>\r\n        {loading && <CircularProgress size={70} className={classes.circuralProgress} />}\r\n      </div>\r\n\r\n      <IconButton onClick={() => toggleModal(true)}>\r\n        <Shuffle fontSize=\"large\" />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(ButtonGroup);\r\n","import React from \"react\";\r\nimport {\r\n  withStyles,\r\n  Button,\r\n  Modal,\r\n  Typography,\r\n  Card,\r\n  Fade,\r\n  Backdrop,\r\n  Paper,\r\n  Divider,\r\n  FormControl,\r\n  FormLabel,\r\n  FormControlLabel,\r\n  Radio,\r\n  RadioGroup\r\n} from \"@material-ui/core\";\r\n\r\nconst styles = theme => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  },\r\n\r\n  paper: {\r\n    width: \"30%\",\r\n    height: \"80%\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: 300,\r\n      heigh: 600\r\n    },\r\n  },\r\n  container: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexFlow: \"column wrap\"\r\n  },\r\n  formContainer: {\r\n    display: \"flex\",\r\n    justifyContent:\"center\",\r\n    marginTop: \"20%\"\r\n  },\r\n\r\n  rollButton: {\r\n    marginTop: \"auto\"\r\n  }\r\n});\r\n\r\nconst MovieModal = ({ open, toggleModal, classes }) => {\r\n  return (\r\n    <div>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={() => toggleModal(false)}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <Paper className={classes.paper} elevation={3}>\r\n            <div className={classes.container}>\r\n              <div>\r\n                <Typography variant=\"h4\">Movie Roulette</Typography>\r\n              </div>\r\n              <Divider />\r\n              <div className={classes.formContainer}>\r\n                <FormControl\r\n                  component=\"fieldset\"\r\n                  className={classes.formControl}\r\n                >\r\n                  <FormLabel component=\"legend\">Gender</FormLabel>\r\n                  <RadioGroup aria-label=\"gender\" name=\"gender1\">\r\n                    <FormControlLabel\r\n                      value=\"female\"\r\n                      control={<Radio />}\r\n                      label=\"Female\"\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"male\"\r\n                      control={<Radio />}\r\n                      label=\"Male\"\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"other\"\r\n                      control={<Radio />}\r\n                      label=\"Other\"\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"disabled\"\r\n                      disabled\r\n                      control={<Radio />}\r\n                      label=\"(Disabled option)\"\r\n                    />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n              </div>\r\n              <Button className={classes.rollButton}>Roll</Button>\r\n            </div>\r\n          </Paper>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(MovieModal);\r\n","import React from 'react'\r\nimport MovieList from '../MovieList/MovieList'\r\nimport ButtonGroup from '../../components/ButtonGroup/ButtonGroup'\r\nimport MovieModal from '../../components/MovieModal/MovieModal'\r\nconst Layout = ({ data, loading,loadMoreMovies, toggleModal, open}) => {\r\n    return (\r\n        <div>\r\n            <MovieList data={data} />\r\n            <ButtonGroup loadMoreMovies={loadMoreMovies} loading={loading} toggleModal={toggleModal} />\r\n            <MovieModal open={open} toggleModal={toggleModal} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Layout\r\n","import React, { Component } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nexport default class MovieContainer extends Component {\r\n  state = {\r\n    moviesData: null,\r\n    loading: true,\r\n    page: 1,\r\n    modalOpen: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\r\n      `https://api.themoviedb.org/3/movie/popular?api_key=f3edabafe1f7ed3f14c3e13e2f3a8ee3&language=en-US&page=${this.state.page}`\r\n    )\r\n      .then(res => res.json())\r\n      .then(res =>\r\n        this.setState({\r\n          moviesData: res.results,\r\n          loading: false\r\n        })\r\n      );\r\n  }\r\n  fetchMoreMovies = (oldMoviesData) => {\r\n    return () => {\r\n         fetch(\r\n           `https://api.themoviedb.org/3/movie/popular?api_key=f3edabafe1f7ed3f14c3e13e2f3a8ee3&language=en-US&page=${this.state.page}`\r\n         )\r\n           .then(res => res.json())\r\n           .then(res =>\r\n             this.setState({\r\n               moviesData: oldMoviesData.concat(res.results),\r\n               loading: false\r\n             })\r\n           );\r\n       }\r\n   }\r\n  \r\n\r\n  loadMoreMovies = () => {\r\n      \r\n    const oldMoviesData = [...this.state.moviesData];\r\n    this.setState(\r\n      prevState => {\r\n        return {\r\n          page: prevState.page + 1,\r\n          loading: true\r\n        };\r\n      },\r\n      this.fetchMoreMovies(oldMoviesData)\r\n    );\r\n  };\r\n\r\n  toggleModal= (bool) =>{\r\n      debugger;\r\n      this.setState({\r\n          modalOpen: bool\r\n      })\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Layout\r\n          data={this.state.moviesData}\r\n          loading={this.state.loading}\r\n          loadMoreMovies={this.loadMoreMovies}\r\n          toggleModal={this.toggleModal}\r\n          open={this.state.modalOpen}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\n\r\nimport MovieContainer from './containers/MovieContainer/MovieContainer'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <MovieContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}